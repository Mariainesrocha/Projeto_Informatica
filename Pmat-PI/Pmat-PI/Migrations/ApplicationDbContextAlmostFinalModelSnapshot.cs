// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pmat_PI.Models;

namespace Pmat_PI.Migrations
{
    [DbContext(typeof(ApplicationDbContextAlmostFinal))]
    partial class ApplicationDbContextAlmostFinalModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pmat_PI.Models.AnoEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("char(50)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.ToTable("AnoEscolar", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.AnoLetivo", b =>
                {
                    b.Property<string>("AnoLetivo1")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AnoLetivo");

                    b.Property<DateTime>("Fim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime");

                    b.HasKey("AnoLetivo1")
                        .HasName("PK__AnoLetiv__A3590E90F7460D67");

                    b.ToTable("AnoLetivo", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Roles")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Pmat_PI.Models.CicloEnsino", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength(true);

                    b.Property<string>("Descritivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CicloEnsino", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Competicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Competicao", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Concelho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Distrito")
                        .HasColumnType("int")
                        .HasColumnName("distrito");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("Distrito");

                    b.HasIndex(new[] { "Nome", "Distrito" }, "distrito_concelho_unico")
                        .IsUnique()
                        .HasFilter("[nome] IS NOT NULL AND [distrito] IS NOT NULL");

                    b.ToTable("Concelho", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Distrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<int?>("Pais")
                        .HasColumnType("int")
                        .HasColumnName("pais");

                    b.HasKey("Id");

                    b.HasIndex("Pais");

                    b.HasIndex(new[] { "Nome", "Pais" }, "pais_distrito_unico")
                        .IsUnique()
                        .HasFilter("[nome] IS NOT NULL AND [pais] IS NOT NULL");

                    b.ToTable("Distrito", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Equipa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("date");

                    b.Property<int?>("IdEscola")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("IdEscola");

                    b.ToTable("Equipa", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.EquipaAluno", b =>
                {
                    b.Property<int>("IdAlunoEquipa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdEquipa")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdAlunoEquipa")
                        .HasName("PK__EquipaAl__B3D1C4C9422057E6");

                    b.HasIndex("IdUser");

                    b.HasIndex(new[] { "IdEquipa", "IdUser" }, "equipa_user")
                        .IsUnique()
                        .HasFilter("[IdEquipa] IS NOT NULL AND [IdUser] IS NOT NULL");

                    b.ToTable("EquipaAlunos", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.EquipaProva", b =>
                {
                    b.Property<int>("IdProva")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipa")
                        .HasColumnType("int");

                    b.HasKey("IdProva", "IdEquipa")
                        .HasName("PK__EquipaPr__BEE35229EDBE1B17");

                    b.HasIndex("IdEquipa");

                    b.ToTable("EquipaProva", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodDgeec")
                        .HasColumnType("int")
                        .HasColumnName("COD_DGEEC");

                    b.Property<int?>("CodDgpgf")
                        .HasColumnType("int")
                        .HasColumnName("COD_DGPGF");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ensinos")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ENSINOS");

                    b.Property<bool?>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<string>("ExtensaoCodPostal")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Fax")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Gruponatureza")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GRUPONATUREZA");

                    b.Property<int?>("IdFreguesia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoEscola")
                        .HasColumnType("int");

                    b.Property<int?>("Idconcelho")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LATITUDE");

                    b.Property<string>("Localidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("Morada")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .IsFixedLength(true);

                    b.Property<string>("NomeEscola")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(9)
                        .HasColumnType("nchar(9)")
                        .IsFixedLength(true);

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoEscola");

                    b.HasIndex("Idconcelho");

                    b.ToTable("Escola", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Freguesia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Concelho")
                        .HasColumnType("int")
                        .HasColumnName("concelho");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("Concelho");

                    b.HasIndex(new[] { "Nome", "Concelho" }, "concelho_freguesia_unico")
                        .IsUnique()
                        .HasFilter("[nome] IS NOT NULL AND [concelho] IS NOT NULL");

                    b.ToTable("Freguesia", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Tipo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Modelo", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.ModeloNovo", b =>
                {
                    b.Property<int>("IdModel")
                        .HasColumnType("int");

                    b.Property<short?>("AnswersNumber")
                        .HasColumnType("smallint");

                    b.Property<int?>("IdCycle")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cycle");

                    b.Property<int>("IdModeLevel")
                        .HasColumnType("int")
                        .HasColumnName("Id_ModeLevel");

                    b.Property<int>("IdModelType")
                        .HasColumnType("int");

                    b.Property<int?>("IdModelVersion")
                        .HasColumnType("int")
                        .HasColumnName("Id_ModelVersion");

                    b.Property<int>("IdTree")
                        .HasColumnType("int")
                        .HasColumnName("Id_Tree");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("Id_User");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Xml")
                        .HasColumnType("xml")
                        .HasColumnName("XML");

                    b.HasKey("IdModel")
                        .HasName("PK__ModeloNo__C2F00099C89400FE");

                    b.ToTable("ModeloNovo", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.ModeloVelho", b =>
                {
                    b.Property<int>("IdModel")
                        .HasColumnType("int");

                    b.Property<int?>("CCicloEnsino")
                        .HasColumnType("int")
                        .HasColumnName("cCicloEnsino");

                    b.Property<int?>("CContador")
                        .HasColumnType("int")
                        .HasColumnName("cContador");

                    b.Property<DateTime?>("CDataElaboracao")
                        .HasColumnType("datetime")
                        .HasColumnName("cDataElaboracao");

                    b.Property<string>("CInformacaoAdicional")
                        .HasColumnType("ntext")
                        .HasColumnName("cInformacaoAdicional");

                    b.Property<int?>("CNivelDificuldade")
                        .HasColumnType("int")
                        .HasColumnName("cNivelDificuldade");

                    b.Property<int?>("CResponsavel")
                        .HasColumnType("int")
                        .HasColumnName("cResponsavel");

                    b.Property<DateTime?>("DataModificado")
                        .HasColumnType("datetime");

                    b.Property<string>("Letras")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength(true);

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("NumeroRespostas")
                        .HasColumnType("int");

                    b.Property<string>("Objectives")
                        .HasColumnType("ntext");

                    b.Property<string>("Obs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Question")
                        .HasColumnType("ntext");

                    b.Property<string>("Restrictions")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Solution")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("IdModel")
                        .HasName("PK__ModeloVe__C2F00099BE541047");

                    b.ToTable("ModeloVelho", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "UQ__Pais__6F71C0DCE7A7A1EB")
                        .IsUnique()
                        .HasFilter("[nome] IS NOT NULL");

                    b.ToTable("Pais", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("Projeto", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Prova", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Calculadora")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInscFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataProva")
                        .HasColumnType("datetime");

                    b.Property<string>("Estilo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("FimInscricaoEquipas")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FimPreInscricao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FimProva")
                        .HasColumnType("datetime");

                    b.Property<string>("IdAuthor")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IdCompeticao")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InicioInscricaoEquipas")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InicioPreInscricao")
                        .HasColumnType("datetime");

                    b.Property<int?>("MaxEscolas")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTentJogo")
                        .HasColumnType("int");

                    b.Property<string>("NomeProva")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength(true);

                    b.Property<int?>("NumElemsEquipa")
                        .HasColumnType("int");

                    b.Property<int>("NumNiveis")
                        .HasColumnType("int");

                    b.Property<int?>("Plataforma")
                        .HasColumnType("int")
                        .HasColumnName("plataforma");

                    b.Property<int?>("RefIdCicloEnsino")
                        .HasColumnType("int");

                    b.Property<int?>("TempoTotalJogo")
                        .HasColumnType("int");

                    b.Property<bool>("TreinoVisivel")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("URL");

                    b.Property<int?>("VidasPorNivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAuthor");

                    b.HasIndex("IdCompeticao");

                    b.HasIndex("RefIdCicloEnsino");

                    b.ToTable("Prova", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.ProvaEquipaEnunciado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("_Data");

                    b.Property<int>("IdEquipa")
                        .HasColumnType("int");

                    b.Property<int>("IdProva")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("_Status");

                    b.Property<string>("Tempo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("tempo")
                        .IsFixedLength(true);

                    b.Property<int?>("UltimoNivel")
                        .HasColumnType("int")
                        .HasColumnName("ultimoNivel");

                    b.HasKey("Id");

                    b.HasIndex("IdEquipa");

                    b.HasIndex("IdProva");

                    b.ToTable("ProvaEquipaEnunciado", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.ProvaEscola", b =>
                {
                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("IdProva")
                        .HasColumnType("int");

                    b.Property<string>("AnoLetivo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DataRegisto")
                        .HasPrecision(3)
                        .HasColumnType("datetime2(3)");

                    b.Property<int?>("EscolaOrganizadora")
                        .HasColumnType("int");

                    b.Property<int?>("IdUserEscola")
                        .HasColumnType("int");

                    b.HasKey("IdEscola", "IdProva")
                        .HasName("PK__ProvaEsc__EB11F89C4EC72277");

                    b.HasIndex("AnoLetivo");

                    b.HasIndex("EscolaOrganizadora");

                    b.HasIndex("IdProva");

                    b.ToTable("ProvaEscolas", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.ProvaModelo", b =>
                {
                    b.Property<int>("IdProva")
                        .HasColumnType("int");

                    b.Property<int>("IdModelo")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.HasKey("IdProva", "IdModelo", "Nivel")
                        .HasName("PK__ProvaMod__6059BF9DF6B3D3C7");

                    b.HasIndex("IdModelo");

                    b.ToTable("ProvaModelos", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.SubProva", b =>
                {
                    b.Property<int>("IdProvaPai")
                        .HasColumnType("int");

                    b.Property<int>("IdProvaFilho")
                        .HasColumnType("int");

                    b.HasKey("IdProvaPai", "IdProvaFilho")
                        .HasName("PK__SubProva__89F3B2720053DDFF");

                    b.HasIndex("IdProvaFilho");

                    b.ToTable("SubProvas", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.TipoEscola", b =>
                {
                    b.Property<int>("IdTipoEscola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_escola")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescricaoTipoEscola")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("char(100)")
                        .IsFixedLength(true);

                    b.Property<string>("TipoEscola1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("TipoEscola")
                        .IsFixedLength(true);

                    b.HasKey("IdTipoEscola")
                        .HasName("PK__TipoEsco__1B703B82342D89C1");

                    b.ToTable("TipoEscola", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Treino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Calculadora")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Estilo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("IdAuthor")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MaxEscolas")
                        .HasColumnType("int");

                    b.Property<int?>("MaxTentJogo")
                        .HasColumnType("int");

                    b.Property<string>("NomeProva")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("char(60)")
                        .IsFixedLength(true);

                    b.Property<int?>("NumElemsEquipa")
                        .HasColumnType("int");

                    b.Property<int>("NumNiveis")
                        .HasColumnType("int");

                    b.Property<int?>("Plataforma")
                        .HasColumnType("int")
                        .HasColumnName("plataforma");

                    b.Property<int?>("RefIdCicloEnsino")
                        .HasColumnType("int");

                    b.Property<int?>("TempoTotalJogo")
                        .HasColumnType("int");

                    b.Property<bool>("TreinoVisivel")
                        .HasColumnType("bit");

                    b.Property<string>("Url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("URL");

                    b.Property<int?>("VidasPorNivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAuthor");

                    b.HasIndex("RefIdCicloEnsino");

                    b.ToTable("Treino", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.TreinoEnunciado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("_Data");

                    b.Property<int>("IdTreino")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("_Status");

                    b.Property<string>("Tempo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("tempo")
                        .IsFixedLength(true);

                    b.Property<int?>("UltimoNivel")
                        .HasColumnType("int")
                        .HasColumnName("ultimoNivel");

                    b.HasKey("Id");

                    b.HasIndex("IdTreino");

                    b.HasIndex("IdUser");

                    b.ToTable("TreinoEnunciado", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.TreinoModelo", b =>
                {
                    b.Property<int>("IdTreino")
                        .HasColumnType("int");

                    b.Property<int>("IdModelo")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.HasKey("IdTreino", "IdModelo", "Nivel")
                        .HasName("PK__TreinoMo__482F0D450B00C229");

                    b.HasIndex("IdModelo");

                    b.ToTable("TreinoModelos", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("idTipo");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("Id");

                    b.ToTable("UserContacto", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserContactoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Tipo" }, "UQ__UserCont__E7F956496233548D")
                        .IsUnique()
                        .HasFilter("[tipo] IS NOT NULL");

                    b.ToTable("UserContactoTipo", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserEscola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnoLetivo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data_");

                    b.Property<int?>("IdAnoEscolar")
                        .HasColumnType("int");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int?>("IdProjeto")
                        .HasColumnType("int")
                        .HasColumnName("idProjeto");

                    b.Property<int?>("IdResponsavel")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnoLetivo");

                    b.HasIndex("IdAnoEscolar");

                    b.HasIndex("IdEscola");

                    b.HasIndex("IdProjeto");

                    b.HasIndex("IdResponsavel");

                    b.HasIndex(new[] { "IdUser", "IdProjeto", "IdEscola", "AnoLetivo", "IdAnoEscolar" }, "user_escola_projeto_anolet_escolar")
                        .IsUnique()
                        .HasFilter("[IdUser] IS NOT NULL AND [idProjeto] IS NOT NULL AND [AnoLetivo] IS NOT NULL AND [IdAnoEscolar] IS NOT NULL");

                    b.ToTable("UserEscola", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserEscolaHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnoLetivo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data_");

                    b.Property<int?>("IdAnoEscolar")
                        .HasColumnType("int");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int?>("IdProjeto")
                        .HasColumnType("int")
                        .HasColumnName("idProjeto");

                    b.Property<int?>("IdResponsavel")
                        .HasColumnType("int");

                    b.Property<string>("IdUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnoLetivo");

                    b.HasIndex("IdAnoEscolar");

                    b.HasIndex("IdEscola");

                    b.HasIndex("IdProjeto");

                    b.HasIndex("IdResponsavel");

                    b.HasIndex("IdUser");

                    b.ToTable("UserEscolaHistorico", "pmate");
                });

            modelBuilder.Entity("Pmat_PI.Models.Concelho", b =>
                {
                    b.HasOne("Pmat_PI.Models.Distrito", "DistritoNavigation")
                        .WithMany("Concelhos")
                        .HasForeignKey("Distrito")
                        .HasConstraintName("FK__Concelho__distri__2704CA5F");

                    b.Navigation("DistritoNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.Distrito", b =>
                {
                    b.HasOne("Pmat_PI.Models.Pais", "PaisNavigation")
                        .WithMany("Distritos")
                        .HasForeignKey("Pais")
                        .HasConstraintName("FK__Distrito__pais__2334397B");

                    b.Navigation("PaisNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.Equipa", b =>
                {
                    b.HasOne("Pmat_PI.Models.Escola", "IdEscolaNavigation")
                        .WithMany("Equipas")
                        .HasForeignKey("IdEscola")
                        .HasConstraintName("FK__Equipa__IdEscola__269AB60B");

                    b.Navigation("IdEscolaNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.EquipaAluno", b =>
                {
                    b.HasOne("Pmat_PI.Models.Equipa", "IdEquipaNavigation")
                        .WithMany("EquipaAlunos")
                        .HasForeignKey("IdEquipa")
                        .HasConstraintName("FK__EquipaAlu__IdEqu__2A6B46EF");

                    b.HasOne("Pmat_PI.Models.AspNetUser", "IdUserNavigation")
                        .WithMany("EquipaAlunos")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__EquipaAlu__IdUse__2B5F6B28");

                    b.Navigation("IdEquipaNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.EquipaProva", b =>
                {
                    b.HasOne("Pmat_PI.Models.Equipa", "IdEquipaNavigation")
                        .WithMany("EquipaProvas")
                        .HasForeignKey("IdEquipa")
                        .HasConstraintName("FK__EquipaPro__IdEqu__442B18F2")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Prova", "IdProvaNavigation")
                        .WithMany("EquipaProvas")
                        .HasForeignKey("IdProva")
                        .HasConstraintName("FK__EquipaPro__IdPro__451F3D2B")
                        .IsRequired();

                    b.Navigation("IdEquipaNavigation");

                    b.Navigation("IdProvaNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.Escola", b =>
                {
                    b.HasOne("Pmat_PI.Models.TipoEscola", "IdTipoEscolaNavigation")
                        .WithMany("Escolas")
                        .HasForeignKey("IdTipoEscola")
                        .HasConstraintName("FK__Escola__IdTipoEs__11D4A34F")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Concelho", "IdconcelhoNavigation")
                        .WithMany("Escolas")
                        .HasForeignKey("Idconcelho")
                        .HasConstraintName("FK__Escola__Idconcel__12C8C788");

                    b.Navigation("IdconcelhoNavigation");

                    b.Navigation("IdTipoEscolaNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.Freguesia", b =>
                {
                    b.HasOne("Pmat_PI.Models.Concelho", "ConcelhoNavigation")
                        .WithMany("Freguesia")
                        .HasForeignKey("Concelho")
                        .HasConstraintName("FK__freguesia__conce__2AD55B43");

                    b.Navigation("ConcelhoNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.ModeloNovo", b =>
                {
                    b.HasOne("Pmat_PI.Models.Modelo", "IdModelNavigation")
                        .WithOne("ModeloNovo")
                        .HasForeignKey("Pmat_PI.Models.ModeloNovo", "IdModel")
                        .HasConstraintName("FK__ModeloNov__IdMod__35DCF99B")
                        .IsRequired();

                    b.Navigation("IdModelNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.ModeloVelho", b =>
                {
                    b.HasOne("Pmat_PI.Models.Modelo", "IdModelNavigation")
                        .WithOne("ModeloVelho")
                        .HasForeignKey("Pmat_PI.Models.ModeloVelho", "IdModel")
                        .HasConstraintName("FK__ModeloVel__IdMod__38B96646")
                        .IsRequired();

                    b.Navigation("IdModelNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.Prova", b =>
                {
                    b.HasOne("Pmat_PI.Models.AspNetUser", "IdAuthorNavigation")
                        .WithMany("Provas")
                        .HasForeignKey("IdAuthor")
                        .HasConstraintName("FK__Prova__IdAuthor__1C1D2798");

                    b.HasOne("Pmat_PI.Models.Competicao", "IdCompeticaoNavigation")
                        .WithMany("Provas")
                        .HasForeignKey("IdCompeticao")
                        .HasConstraintName("FK__Prova__IdCompeti__1B29035F");

                    b.HasOne("Pmat_PI.Models.CicloEnsino", "RefIdCicloEnsinoNavigation")
                        .WithMany("Provas")
                        .HasForeignKey("RefIdCicloEnsino")
                        .HasConstraintName("FK__Prova__RefIdCicl__60C757A0");

                    b.Navigation("IdAuthorNavigation");

                    b.Navigation("IdCompeticaoNavigation");

                    b.Navigation("RefIdCicloEnsinoNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.ProvaEquipaEnunciado", b =>
                {
                    b.HasOne("Pmat_PI.Models.Equipa", "IdEquipaNavigation")
                        .WithMany("ProvaEquipaEnunciados")
                        .HasForeignKey("IdEquipa")
                        .HasConstraintName("FK__ProvaEqui__IdEqu__48EFCE0F")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Prova", "IdProvaNavigation")
                        .WithMany("ProvaEquipaEnunciados")
                        .HasForeignKey("IdProva")
                        .HasConstraintName("FK__ProvaEqui__IdPro__47FBA9D6")
                        .IsRequired();

                    b.Navigation("IdEquipaNavigation");

                    b.Navigation("IdProvaNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.ProvaEscola", b =>
                {
                    b.HasOne("Pmat_PI.Models.AnoLetivo", "AnoLetivoNavigation")
                        .WithMany("ProvaEscolas")
                        .HasForeignKey("AnoLetivo")
                        .HasConstraintName("FK__ProvaEsco__AnoLe__23BE4960");

                    b.HasOne("Pmat_PI.Models.Escola", "EscolaOrganizadoraNavigation")
                        .WithMany("ProvaEscolaEscolaOrganizadoraNavigations")
                        .HasForeignKey("EscolaOrganizadora")
                        .HasConstraintName("FK__ProvaEsco__Escol__22CA2527");

                    b.HasOne("Pmat_PI.Models.Escola", "IdEscolaNavigation")
                        .WithMany("ProvaEscolaIdEscolaNavigations")
                        .HasForeignKey("IdEscola")
                        .HasConstraintName("FK__ProvaEsco__IdEsc__20E1DCB5")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Prova", "IdProvaNavigation")
                        .WithMany("ProvaEscolas")
                        .HasForeignKey("IdProva")
                        .HasConstraintName("FK__ProvaEsco__IdPro__21D600EE")
                        .IsRequired();

                    b.Navigation("AnoLetivoNavigation");

                    b.Navigation("EscolaOrganizadoraNavigation");

                    b.Navigation("IdEscolaNavigation");

                    b.Navigation("IdProvaNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.ProvaModelo", b =>
                {
                    b.HasOne("Pmat_PI.Models.Modelo", "IdModeloNavigation")
                        .WithMany("ProvaModelos")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("FK__ProvaMode__IdMod__3C89F72A")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Prova", "IdProvaNavigation")
                        .WithMany("ProvaModelos")
                        .HasForeignKey("IdProva")
                        .HasConstraintName("FK__ProvaMode__IdPro__3B95D2F1")
                        .IsRequired();

                    b.Navigation("IdModeloNavigation");

                    b.Navigation("IdProvaNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.SubProva", b =>
                {
                    b.HasOne("Pmat_PI.Models.Prova", "IdProvaFilhoNavigation")
                        .WithMany("SubProvaIdProvaFilhoNavigations")
                        .HasForeignKey("IdProvaFilho")
                        .HasConstraintName("FK__SubProvas__IdPro__70099B30")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Prova", "IdProvaPaiNavigation")
                        .WithMany("SubProvaIdProvaPaiNavigations")
                        .HasForeignKey("IdProvaPai")
                        .HasConstraintName("FK__SubProvas__IdPro__6F1576F7")
                        .IsRequired();

                    b.Navigation("IdProvaFilhoNavigation");

                    b.Navigation("IdProvaPaiNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.Treino", b =>
                {
                    b.HasOne("Pmat_PI.Models.AspNetUser", "IdAuthorNavigation")
                        .WithMany("Treinos")
                        .HasForeignKey("IdAuthor")
                        .HasConstraintName("FK__Treino__IdAuthor__2E3BD7D3");

                    b.HasOne("Pmat_PI.Models.CicloEnsino", "RefIdCicloEnsinoNavigation")
                        .WithMany("Treinos")
                        .HasForeignKey("RefIdCicloEnsino")
                        .HasConstraintName("FK__Treino__RefIdCic__5FD33367");

                    b.Navigation("IdAuthorNavigation");

                    b.Navigation("RefIdCicloEnsinoNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.TreinoEnunciado", b =>
                {
                    b.HasOne("Pmat_PI.Models.Treino", "IdTreinoNavigation")
                        .WithMany("TreinoEnunciados")
                        .HasForeignKey("IdTreino")
                        .HasConstraintName("FK__TreinoEnu__IdTre__536D5C82")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.AspNetUser", "IdUserNavigation")
                        .WithMany("TreinoEnunciados")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__TreinoEnu__IdUse__546180BB")
                        .IsRequired();

                    b.Navigation("IdTreinoNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.TreinoModelo", b =>
                {
                    b.HasOne("Pmat_PI.Models.Modelo", "IdModeloNavigation")
                        .WithMany("TreinoModelos")
                        .HasForeignKey("IdModelo")
                        .HasConstraintName("FK__TreinoMod__IdMod__405A880E")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Treino", "IdTreinoNavigation")
                        .WithMany("TreinoModelos")
                        .HasForeignKey("IdTreino")
                        .HasConstraintName("FK__TreinoMod__IdTre__3F6663D5")
                        .IsRequired();

                    b.Navigation("IdModeloNavigation");

                    b.Navigation("IdTreinoNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserEscola", b =>
                {
                    b.HasOne("Pmat_PI.Models.AnoLetivo", "AnoLetivoNavigation")
                        .WithMany("UserEscolas")
                        .HasForeignKey("AnoLetivo")
                        .HasConstraintName("FK__UserEscol__AnoLe__090A5324");

                    b.HasOne("Pmat_PI.Models.AnoEscolar", "IdAnoEscolarNavigation")
                        .WithMany("UserEscolas")
                        .HasForeignKey("IdAnoEscolar")
                        .HasConstraintName("FK__UserEscol__IdAno__08162EEB");

                    b.HasOne("Pmat_PI.Models.Escola", "IdEscolaNavigation")
                        .WithMany("UserEscolas")
                        .HasForeignKey("IdEscola")
                        .HasConstraintName("FK__UserEscol__IdEsc__062DE679")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Projeto", "IdProjetoNavigation")
                        .WithMany("UserEscolas")
                        .HasForeignKey("IdProjeto")
                        .HasConstraintName("FK__UserEscol__idPro__09FE775D");

                    b.HasOne("Pmat_PI.Models.UserEscola", "IdResponsavelNavigation")
                        .WithMany("InverseIdResponsavelNavigation")
                        .HasForeignKey("IdResponsavel")
                        .HasConstraintName("FK__UserEscol__IdRes__07220AB2");

                    b.HasOne("Pmat_PI.Models.AspNetUser", "IdUserNavigation")
                        .WithMany("UserEscolas")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__UserEscol__data___0539C240")
                        .IsRequired();

                    b.Navigation("AnoLetivoNavigation");

                    b.Navigation("IdAnoEscolarNavigation");

                    b.Navigation("IdEscolaNavigation");

                    b.Navigation("IdProjetoNavigation");

                    b.Navigation("IdResponsavelNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserEscolaHistorico", b =>
                {
                    b.HasOne("Pmat_PI.Models.AnoLetivo", "AnoLetivoNavigation")
                        .WithMany("UserEscolaHistoricos")
                        .HasForeignKey("AnoLetivo")
                        .HasConstraintName("FK__UserEscol__AnoLe__10AB74EC");

                    b.HasOne("Pmat_PI.Models.AnoEscolar", "IdAnoEscolarNavigation")
                        .WithMany("UserEscolaHistoricos")
                        .HasForeignKey("IdAnoEscolar")
                        .HasConstraintName("FK__UserEscol__IdAno__0FB750B3");

                    b.HasOne("Pmat_PI.Models.Escola", "IdEscolaNavigation")
                        .WithMany("UserEscolaHistoricos")
                        .HasForeignKey("IdEscola")
                        .HasConstraintName("FK__UserEscol__IdEsc__0DCF0841")
                        .IsRequired();

                    b.HasOne("Pmat_PI.Models.Projeto", "IdProjetoNavigation")
                        .WithMany("UserEscolaHistoricos")
                        .HasForeignKey("IdProjeto")
                        .HasConstraintName("FK__UserEscol__idPro__119F9925");

                    b.HasOne("Pmat_PI.Models.UserEscola", "IdResponsavelNavigation")
                        .WithMany("UserEscolaHistoricos")
                        .HasForeignKey("IdResponsavel")
                        .HasConstraintName("FK__UserEscol__IdRes__0EC32C7A");

                    b.HasOne("Pmat_PI.Models.AspNetUser", "IdUserNavigation")
                        .WithMany("UserEscolaHistoricos")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__UserEscol__data___0CDAE408")
                        .IsRequired();

                    b.Navigation("AnoLetivoNavigation");

                    b.Navigation("IdAnoEscolarNavigation");

                    b.Navigation("IdEscolaNavigation");

                    b.Navigation("IdProjetoNavigation");

                    b.Navigation("IdResponsavelNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Pmat_PI.Models.AnoEscolar", b =>
                {
                    b.Navigation("UserEscolaHistoricos");

                    b.Navigation("UserEscolas");
                });

            modelBuilder.Entity("Pmat_PI.Models.AnoLetivo", b =>
                {
                    b.Navigation("ProvaEscolas");

                    b.Navigation("UserEscolaHistoricos");

                    b.Navigation("UserEscolas");
                });

            modelBuilder.Entity("Pmat_PI.Models.AspNetUser", b =>
                {
                    b.Navigation("EquipaAlunos");

                    b.Navigation("Provas");

                    b.Navigation("TreinoEnunciados");

                    b.Navigation("Treinos");

                    b.Navigation("UserEscolaHistoricos");

                    b.Navigation("UserEscolas");
                });

            modelBuilder.Entity("Pmat_PI.Models.CicloEnsino", b =>
                {
                    b.Navigation("Provas");

                    b.Navigation("Treinos");
                });

            modelBuilder.Entity("Pmat_PI.Models.Competicao", b =>
                {
                    b.Navigation("Provas");
                });

            modelBuilder.Entity("Pmat_PI.Models.Concelho", b =>
                {
                    b.Navigation("Escolas");

                    b.Navigation("Freguesia");
                });

            modelBuilder.Entity("Pmat_PI.Models.Distrito", b =>
                {
                    b.Navigation("Concelhos");
                });

            modelBuilder.Entity("Pmat_PI.Models.Equipa", b =>
                {
                    b.Navigation("EquipaAlunos");

                    b.Navigation("EquipaProvas");

                    b.Navigation("ProvaEquipaEnunciados");
                });

            modelBuilder.Entity("Pmat_PI.Models.Escola", b =>
                {
                    b.Navigation("Equipas");

                    b.Navigation("ProvaEscolaEscolaOrganizadoraNavigations");

                    b.Navigation("ProvaEscolaIdEscolaNavigations");

                    b.Navigation("UserEscolaHistoricos");

                    b.Navigation("UserEscolas");
                });

            modelBuilder.Entity("Pmat_PI.Models.Modelo", b =>
                {
                    b.Navigation("ModeloNovo");

                    b.Navigation("ModeloVelho");

                    b.Navigation("ProvaModelos");

                    b.Navigation("TreinoModelos");
                });

            modelBuilder.Entity("Pmat_PI.Models.Pais", b =>
                {
                    b.Navigation("Distritos");
                });

            modelBuilder.Entity("Pmat_PI.Models.Projeto", b =>
                {
                    b.Navigation("UserEscolaHistoricos");

                    b.Navigation("UserEscolas");
                });

            modelBuilder.Entity("Pmat_PI.Models.Prova", b =>
                {
                    b.Navigation("EquipaProvas");

                    b.Navigation("ProvaEquipaEnunciados");

                    b.Navigation("ProvaEscolas");

                    b.Navigation("ProvaModelos");

                    b.Navigation("SubProvaIdProvaFilhoNavigations");

                    b.Navigation("SubProvaIdProvaPaiNavigations");
                });

            modelBuilder.Entity("Pmat_PI.Models.TipoEscola", b =>
                {
                    b.Navigation("Escolas");
                });

            modelBuilder.Entity("Pmat_PI.Models.Treino", b =>
                {
                    b.Navigation("TreinoEnunciados");

                    b.Navigation("TreinoModelos");
                });

            modelBuilder.Entity("Pmat_PI.Models.UserEscola", b =>
                {
                    b.Navigation("InverseIdResponsavelNavigation");

                    b.Navigation("UserEscolaHistoricos");
                });
#pragma warning restore 612, 618
        }
    }
}
