@model Pmat_PI.Models.ViewModel_ProvaDetails

@{
    ViewData["Title"] = "Detalhes";
}
<style>
    .flex-container {
        display: flex;
    }

    .flex-child {
        flex: 1;
    }

        .flex-child:first-child {
            margin-right: 2%;
        }

    .teste::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
        background-color: #F5F5F5;
        border-radius: 10px;
    }

    .teste::-webkit-scrollbar {
        width: 12px;
        background-color: #F5F5F5;
    }

    .teste::-webkit-scrollbar-thumb {
        border-radius: 10px;
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);
        background-image: -webkit-linear-gradient(330deg, #f6d365 0%, #fda085 100%);
        background-image: linear-gradient(120deg, #f6d365 0%, #fda085 100%);
    }

    .teste {
        scrollbar-color: #f6d365 #F5F5F5;
    }
</style>
<h1>Detalhes da Prova</h1>
<hr />
<div>
    <div>
        <h3>Resultados:</h3>
        <div class="row">
            <div class="col">
                @if ((bool)ViewData["FileExists"] == true)
                {
                    <a asp-action="OpenHTML" asp-route-id="@Model.prova.Id" class="btn btn-primary">Download HTML</a>
                    <a asp-action="DeleteHTML" asp-route-id="@Model.prova.Id" class="btn btn-danger">Apagar HTML</a>
                }
                else
                {
                    <a asp-action="GenerateHTML" asp-route-id="@Model.prova.Id" class="btn btn-primary"> Gerar Html </a>
                }
            </div>
        </div>
    </div>

    <div class="flex-container">
        <div class="flex-child details" style="padding-top:3%">
            <h5>Detalhes:</h5>
            <dl class="row">
                <dt class="col-sm-4">
                    Nome
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.NomeProva)
                </dd>
                <dt class="col-sm-4">
                    Data de Criação
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.DataCriacao)
                </dd>
                <dt class="col-sm-4">
                    Nº de escolas
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.MaxEscolas)
                </dd>
                <dt class="col-sm-4">
                    Tentativas por jogo
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.MaxTentJogo)
                </dd>
                <dt class="col-sm-4">
                    Duração da prova
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.TempoTotalJogo) (mins)
                </dd>
                <dt class="col-sm-4">
                    Nº de níveis
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.NumNiveis)
                </dd>
                <dt class="col-sm-4">
                    Vidas por nível
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.VidasPorNivel)
                </dd>
                <dt class="col-sm-4">
                    Tamanho da equipa
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.NumElemsEquipa)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.prova.Calculadora)
                </dt>
                <dd class="col-sm-8">
                    @if (Model.prova.Calculadora.Equals(false))
                    {
                        <span> Não</span>
                    }
                    else
                    {
                        <span>Sim</span>
                    }
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.prova.Estilo)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.Estilo)
                </dd>
                <dt class="col-sm-4">
                    URL
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.Url)
                </dd>
                <dt class="col-sm-4">
                    @Html.DisplayNameFor(model => model.prova.Plataforma)
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.Plataforma)
                </dd>

                <dt class="col-sm-4">
                    Ciclo de Ensino
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.RefIdCicloEnsinoNavigation.Descritivo)
                </dd>
                <dt class="col-sm-4">
                    Treino Visível
                </dt>
                <dd class="col-sm-8">
                    @if (Model.prova.TreinoVisivel.Equals(false))
                    {
                        <span> Não</span>
                    }
                    else
                    {
                        <span>Sim</span>
                    }
                </dd>
                <dt class="col-sm-4">
                    Data de Inscrições
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.InicioInscricaoEquipas) até @Html.DisplayFor(model => model.prova.FimInscricaoEquipas)
                </dd>
                <dt class="col-sm-4">
                    Data da prova
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.DataProva) até @Html.DisplayFor(model => model.prova.FimProva)
                </dd>
                <dt class="col-sm-4">
                    Autor
                </dt>
                <dd class="col-sm-8">
                    @if (Model.prova.IdAuthorNavigation == null)
                    {
                        <span> --- </span>
                    }
                    else
                    {
                        <span>id: @Html.DisplayFor(model => model.prova.IdAuthorNavigation.Id) - @Html.DisplayFor(model => model.prova.IdAuthorNavigation.Name)</span>
                    }
                </dd>
                <dt class="col-sm-4">
                    Competição
                </dt>
                <dd class="col-sm-8">
                    @Html.DisplayFor(model => model.prova.IdCompeticaoNavigation.Etiqueta)
                </dd>
            </dl>
            <div>
                <dl class="row">
                    <dt>
                        <a asp-action="Index" class="btn btn-outline-primary"> Voltar à lista de provas </a>
                    </dt>
                    <dd class="col-sm-3">
                        <a asp-action="Edit" asp-route-id="@Model.prova.Id" class="btn btn-outline-warning"> Editar </a>
                    </dd>
                </dl>
            </div>
        </div>
        <div class="flex-child models">
            <h5>Modelos:</h5>
            @if (ViewBag.modelos == null)
            {
                <p> Esta prova ainda não tem modelos associados.</p>
            }
            else
            {
                <table class="teste" style="overflow-y: scroll; height: 600px; display: block;">
                    @foreach (ProvaModelo m in ViewBag.modelos)
                    {
                        <tr>
                            <td>
                                Id: @m.IdModelo - Nível: @m.Nivel
                            </td>
                            <td>
                                <a id="deleteModal" data-toggle="modal" data-target="#modal-delete" data-id="@m.IdModelo" data-nivel="@m.Nivel" class="btn">
                                    <i style="font-size:30px; color: indianred ;" class="fa fa-remove"> </i>
                                </a>
                            </td>
                        </tr>
                    }
                </table>

                <!--Confirm delete modal-->
                <form asp-action="RemoverModelo" role="form" id="myForm">
                    <div class="modal fade" id="modal-delete" tabindex="-1" role="dialog" aria-labelledby="modalDeleteLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title text-warning" id="exampleModalLabel">Remover Modelo</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    Deseja realmente remover este modelo da prova?
                                    <input hidden id="myId" name="modeloId" />
                                    <input hidden id="nivel" name="nivel" />
                                    <input hidden value="@Html.DisplayFor(model => Model.prova.Id)" name="provaId" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-primary" data-dismiss="modal">Não</button>
                                    <button type="submit" class="btn btn-danger" id="modalDeleteButton">Sim</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            }
            <div style="padding-top: 2%">
                <a data-toggle="modal" href="#modalModelo" class="btn btn-warning text-light"> Adicionar Modelo </a>
                <a data-toggle="modal" href="#modalCopiar" class="btn btn-success text-light"> Copiar Modelos </a>
            </div>
        </div>
    </div>
</div>

<br />
<h2> Participantes da prova</h2>
@if (Model.enunciados.Count == 0)
{
    <p> Nenhum participante fez esta prova ainda. </p>
}
else
{
    <table class="table table-sm table-bordered  table-hover text-md-center">
        <thead>
            <tr>
                <th style="display: table-cell; vertical-align: middle;"> ID enunciado</th>
                <th style="display: table-cell; vertical-align: middle;"> ID Equipa</th>
                <th style="display: table-cell; vertical-align: middle;"> Alunos </th>
                <th style="display: table-cell; vertical-align: middle;"> Ultimo Nivel </th>
                <th style="display: table-cell; vertical-align: middle;"> Tempo </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.enunciados)
            {
                <tr>
                    <td style="width: 10%">
                        <a style="margin-right:2%" 
                           asp-controller="ProvaEquipaEnunciados"
                           asp-action="Details"
                           asp-route-id="@item.Id"
                           >
                            @Html.DisplayFor(modelItem => item.Id)
                        </a>
                    </td>
                    <td style="width: 25%">
                        @Html.DisplayFor(modelItem => item.idEquipa)
                    </td>
                    <td style="width: 25%">
                        <a asp-area="" asp-controller="Users" asp-action="UpdateUser" asp-route-id="@item.userId"> @Html.DisplayFor(modelItem => item.name)</a>

                    </td>
                    <td style="width: 25%">
                        @Html.DisplayFor(modelItem => item.ultimoNivel)
                    </td>
                    <td style="width: 25%">
                        @Html.DisplayFor(modelItem => item.tempo)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    var prevDisabled = Model.pageNumber < 2 ? "disabled" : "";

    <div style="text-align:center">
        <a style="margin-right:2%" asp-action="Details"
           asp-route-pageNumber="@(Model.pageNumber -1)"
           class="btn btn-info" prevDisabled>
            Anterior
        </a>
        <a asp-action="Details"
           asp-route-pageNumber="@(Model.pageNumber +1)"
           class="btn btn-info">
            Próximo
        </a>
    </div>
}


<!-- Success modal-->
<div class="modal fade" id="mymodal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel" style="color: orange; bold;">Informação</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @TempData["msg"]
            </div>
        </div>
    </div>
</div>

@if (TempData["msg"] != null)
{
    <script>
        $("#mymodal").modal('show');
    </script>
}

@section scripts{
    <script>
        $(function () {
            $('#modal-delete').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var id = button.data("id");
                var nivel = button.data("nivel");
                var modal = $(this);

                modal.find('#myId').val(id);
                modal.find('#nivel').val(nivel);
            });

            $("#modalDeleteButton").click(function () {
                $("#myForm").submit();
            });

        });

        function pesquisar() {
            callAjaxGet();
        };

        function callAjaxGet() {
            $('#provasList').children().remove();
            $.ajax
                ({
                    type: "GET",
                    url: '@Url.Action("SearchProvas", "Competicoes")',
                    contentType: "application/json; charset=utf-8",
                    data: { nomeProva: $("#pesquisa").val() },
                    dataType: 'json',
                    success: function (data) {
                        $('#provasList').show();
                        $('#notfound').hide();
                        if (data.length > 0) {
                            var newHTML = ""
                            data.forEach(function (item, index) {
                                newHTML += '<p>  id: ' + item.id + ' - nome: <span> ' + item.nomeProva + '</span></p>';
                            });
                            $('#provasList').append(newHTML);
                        }
                        else {
                            $('#provasList').hide();
                            $('#notfound').show().delay(10000).hide("slow");
                        }
                    },
                    error: function (err) {
                        console.log(err)
                        }
                });
        }
    </script>
}
@await Html.PartialAsync("_ModeloPartial", new ProvaModelo(), new ViewDataDictionary(new Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider(), new Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary()) { { "ProvaId", Model.prova.Id } })
@await Html.PartialAsync("_CopiarModeloPartial", new ViewDataDictionary(new Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider(), new Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary()) { { "ProvaId", Model.prova.Id } })